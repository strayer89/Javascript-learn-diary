递归：递归函数是在一个函数通过名字调用自身的情况下构成的;
闭包：有权访问另一个函数作用域中的变量的函数;(常规方式，在一个函数内部创建另一个函数);
匿名函数：
执行环境：又可以说是"执行上下文",可以将执行环境看做是对象;
	1> 单线程：JavaScript的工作方式（某一时刻只有唯一的事件是被激活处理的，其他的事件被列入队列中等待被处理）;
	2> 同步执行;
	3> 唯一的一个全局上下文;
	4> 函数的执行上下文没有个数限制;
	5> 每次某个函数被调用时，就会有个新的执行上下文为其创建;
	执行环境的建立过程：
		1> 建立阶段（调用函数但在执行函数内代码之前）：
			建立变量、函数、arguments对象、参数;
			建立作用域链;
			确定this的值;
		2> 执行阶段：
			变量赋值，函数引用，执行其他代码;
			function test(){
				js引擎先建立|||
				然后是下面
				console.log("abc");
			}
			test();当代码调用时;
	实际上可以把执行环境看作是一个对象，其包含三个属性：
		obj = {
			variableObject:{arguments对象，参数，内部变量，函数声明},
			scopeChain:{作用域链},
			this:{指针对象}
		}

变量对象：
活动对象：
作用域：
作用域链：